# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-25 23:42
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.AutoField(db_column=b'id_gbif', primary_key=True, serialize=False)),
                ('dataset_id', models.TextField(blank=True, db_index=True, null=True)),
                ('institution_code', models.TextField(blank=True, db_index=True, null=True)),
                ('collection_code', models.TextField(blank=True, db_index=True, null=True)),
                ('catalog_number', models.TextField(blank=True, db_index=True, null=True)),
                ('basis_of_record', models.TextField(blank=True, db_index=True, null=True)),
                ('scientific_name', models.TextField(blank=True, db_index=True, null=True)),
                ('kingdom', models.TextField(blank=True, db_index=True, null=True)),
                ('phylum', models.TextField(blank=True, db_index=True, null=True)),
                ('_class', models.TextField(blank=True, db_index=True, null=True)),
                ('_order', models.TextField(blank=True, db_index=True, null=True)),
                ('family', models.TextField(blank=True, db_index=True, null=True)),
                ('genus', models.TextField(blank=True, db_index=True, null=True)),
                ('specific_epithet', models.TextField(blank=True, db_index=True, null=True)),
                ('kingdom_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('phylum_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('class_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('order_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('family_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('genus_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('species_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('country_code', models.TextField(blank=True, db_index=True, max_length=7, null=True)),
                ('latitude', models.FloatField(blank=True, db_index=True, null=True)),
                ('longitude', models.FloatField(blank=True, db_index=True, null=True)),
                ('year', models.IntegerField(blank=True, db_index=True, null=True)),
                ('month', models.IntegerField(blank=True, db_index=True, null=True)),
                ('day', models.IntegerField(blank=True, db_index=True, null=True)),
                ('event_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('state_province', models.TextField(blank=True, db_index=True, null=True)),
                ('county', models.TextField(blank=True, db_index=True, null=True)),
                ('country', models.TextField(blank=True, db_index=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'db_table': 'gbif_occurrence_csv',
            },
        ),
        migrations.CreateModel(
            name='Occurrence_CSV',
            fields=[
                ('id', models.AutoField(db_column=b'id_gbif', primary_key=True, serialize=False)),
                ('dataset_id', models.TextField(blank=True, null=True)),
                ('institution_code', models.TextField(blank=True, null=True)),
                ('collection_code', models.TextField(blank=True, null=True)),
                ('catalog_number', models.TextField(blank=True, null=True)),
                ('basis_of_record', models.TextField(blank=True, null=True)),
                ('scientific_name', models.TextField(blank=True, db_index=True, null=True)),
                ('scientific_name_author', models.TextField(blank=True, null=True)),
                ('taxon_id', models.IntegerField(blank=True, null=True)),
                ('kingdom', models.TextField(blank=True, db_index=True, null=True)),
                ('phylum', models.TextField(blank=True, db_index=True, null=True)),
                ('_class', models.TextField(blank=True, db_index=True, null=True)),
                ('_order', models.TextField(blank=True, db_index=True, null=True)),
                ('family', models.TextField(blank=True, db_index=True, null=True)),
                ('genus', models.TextField(blank=True, db_index=True, null=True)),
                ('specific_epithet', models.TextField(blank=True, db_index=True, null=True)),
                ('kingdom_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('phylum_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('class_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('order_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('family_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('genus_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('species_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('country_code', models.TextField(blank=True, max_length=7, null=True)),
                ('latitude', models.FloatField(blank=True, db_index=True, null=True)),
                ('longitude', models.FloatField(blank=True, db_index=True, null=True)),
                ('year', models.IntegerField(blank=True, db_index=True, null=True)),
                ('month', models.IntegerField(blank=True, db_index=True, null=True)),
                ('event_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('elevation_in_meters', models.FloatField(blank=True, null=True)),
                ('depth_in_meters', models.FloatField(blank=True, null=True)),
                ('verbatim_scientific_name', models.TextField(blank=True, null=True)),
                ('taxon_rank', models.TextField(blank=True, null=True)),
                ('verbatim_kingdom', models.TextField(blank=True, null=True)),
                ('verbatim_phylum', models.TextField(blank=True, null=True)),
                ('verbatim_class', models.TextField(blank=True, null=True)),
                ('verbatim_order', models.TextField(blank=True, null=True)),
                ('verbatim_family', models.TextField(blank=True, null=True)),
                ('verbatim_genus', models.TextField(blank=True, null=True)),
                ('verbatim_specific_epithet', models.TextField(blank=True, null=True)),
                ('verbatim_infraspecific_epithet', models.TextField(blank=True, null=True)),
                ('verbatim_latitude', models.TextField(blank=True, null=True)),
                ('verbatim_longitude', models.TextField(blank=True, null=True)),
                ('coordinate_precision', models.FloatField(blank=True, null=True)),
                ('maximum_elevation_in_meters', models.FloatField(blank=True, null=True)),
                ('minimum_elevation_in_meters', models.FloatField(blank=True, null=True)),
                ('elevation_precision', models.FloatField(blank=True, null=True)),
                ('minimum_depth_in_meters', models.FloatField(blank=True, null=True)),
                ('maximum_depth_in_meters', models.FloatField(blank=True, null=True)),
                ('depth_precision', models.FloatField(blank=True, null=True)),
                ('continent_ocean', models.TextField(blank=True, null=True)),
                ('state_province', models.TextField(blank=True, null=True)),
                ('county', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('recorded_by', models.TextField(blank=True, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('verbatim_year', models.TextField(blank=True, null=True)),
                ('verbatim_month', models.TextField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('verbatim_basis_of_record', models.TextField(blank=True, null=True)),
                ('identified_by', models.TextField(blank=True, null=True)),
                ('date_identified', models.TextField(blank=True, null=True)),
                ('created', models.TextField(blank=True, null=True)),
                ('modified', models.TextField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Occurrence_CSV_Verbatim',
            fields=[
                ('id', models.AutoField(db_column=b'id_gbif', primary_key=True, serialize=False)),
                ('popo', models.TextField(blank=True, null=True)),
                ('dataset_id', models.TextField(blank=True, null=True)),
                ('institution_code', models.TextField(blank=True, null=True)),
                ('collection_code', models.TextField(blank=True, null=True)),
                ('catalog_number', models.TextField(blank=True, null=True)),
                ('basis_of_record', models.TextField(blank=True, null=True)),
                ('scientific_name', models.TextField(blank=True, db_index=True, null=True)),
                ('scientific_name_author', models.TextField(blank=True, null=True)),
                ('taxon_id', models.IntegerField(blank=True, null=True)),
                ('kingdom', models.TextField(blank=True, db_index=True, null=True)),
                ('phylum', models.TextField(blank=True, db_index=True, null=True)),
                ('_class', models.TextField(blank=True, db_index=True, null=True)),
                ('_order', models.TextField(blank=True, db_index=True, null=True)),
                ('family', models.TextField(blank=True, db_index=True, null=True)),
                ('genus', models.TextField(blank=True, db_index=True, null=True)),
                ('specific_epithet', models.TextField(blank=True, db_index=True, null=True)),
                ('kingdom_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('phylum_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('class_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('order_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('family_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('genus_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('species_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('country_code', models.TextField(blank=True, max_length=7, null=True)),
                ('latitude', models.FloatField(blank=True, db_index=True, null=True)),
                ('longitude', models.FloatField(blank=True, db_index=True, null=True)),
                ('year', models.IntegerField(blank=True, db_index=True, null=True)),
                ('month', models.IntegerField(blank=True, db_index=True, null=True)),
                ('event_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('elevation_in_meters', models.TextField(blank=True, null=True)),
                ('depth_in_meters', models.TextField(blank=True, null=True)),
                ('verbatim_scientific_name', models.TextField(blank=True, null=True)),
                ('taxon_rank', models.TextField(blank=True, null=True)),
                ('verbatim_kingdom', models.TextField(blank=True, null=True)),
                ('verbatim_phylum', models.TextField(blank=True, null=True)),
                ('verbatim_class', models.TextField(blank=True, null=True)),
                ('verbatim_order', models.TextField(blank=True, null=True)),
                ('verbatim_family', models.TextField(blank=True, null=True)),
                ('verbatim_genus', models.TextField(blank=True, null=True)),
                ('verbatim_specific_epithet', models.TextField(blank=True, null=True)),
                ('verbatim_infraspecific_epithet', models.TextField(blank=True, null=True)),
                ('verbatim_latitude', models.TextField(blank=True, null=True)),
                ('verbatim_longitude', models.TextField(blank=True, null=True)),
                ('coordinate_precision', models.TextField(blank=True, null=True)),
                ('maximum_elevation_in_meters', models.TextField(blank=True, null=True)),
                ('minimum_elevation_in_meters', models.TextField(blank=True, null=True)),
                ('elevation_precision', models.TextField(blank=True, null=True)),
                ('minimum_depth_in_meters', models.TextField(blank=True, null=True)),
                ('maximum_depth_in_meters', models.TextField(blank=True, null=True)),
                ('depth_precision', models.TextField(blank=True, null=True)),
                ('continent_ocean', models.TextField(blank=True, null=True)),
                ('state_province', models.TextField(blank=True, null=True)),
                ('county', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('recorded_by', models.TextField(blank=True, null=True)),
                ('locality', models.TextField(blank=True, null=True)),
                ('verbatim_year', models.TextField(blank=True, null=True)),
                ('verbatim_month', models.TextField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('verbatim_basis_of_record', models.TextField(blank=True, null=True)),
                ('identified_by', models.TextField(blank=True, null=True)),
                ('date_identified', models.TextField(blank=True, null=True)),
                ('created', models.TextField(blank=True, null=True)),
                ('modified', models.TextField(blank=True, null=True)),
            ],
        ),
    ]
